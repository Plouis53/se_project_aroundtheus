!function(){"use strict";var e=class{constructor(e,t,s,r,i,n,o){this._name=e.name,this._link=e.link,this._id=e._id,this._likes=e.likes,this._cardSelector=s,this._handleCardClick=r,this._handleDeleteClick=i,this._handleLikeClick=n,this._loadingLikeCheck=o,this._userId=t,this._userCardOwnerId=e.owner._id}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}setCardEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this._id)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this._id)}))}_handleImageClick(){this._handleCardClick(this._name,this._link)}deleteCard(){this._cardElement.remove(),this._cardElement=null}updateLikes(e){this._likes=e,this.renderLikes()}renderLikes(){this._cardLikes.textContent=this._likes.length,this.isLiked()?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}isLiked(){return this._likes.some((e=>e._id===this._userId))}getView(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._imageModal=this._cardElement.querySelector("#card-image-modal"),this._cardLikes=this._cardElement.querySelector(".card__likes-counter"),this.renderLikes(),this._userId!=this._userCardOwnerId&&this._deleteButton.remove(),this.setCardEventListeners(),this._cardElement}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_setEventListeners(){this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass)):(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass))}disableButton(){this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass)}_hasInvalidInput(){return this._inputElements.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputElements.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}};var s=class{constructor(e){let{popupSelector:t}=e;var s,r,i;s=this,i=e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()},(r=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var r=s.call(e,"string");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(r="_handleOverlay"))in s?Object.defineProperty(s,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):s[r]=i,this._popupElement=document.querySelector(t),this._handleEscape=this._handleEscape.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscape)}_handleEscape(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",this._handleOverlay)}},r=class extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__form-input"),this._saveButton=this._popupForm.querySelector(".modal__button"),this._handleFormSubmit=t}renderLoading(e,t){this._saveButton.textContent=e?"Saving...":t}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){super.close(),this._popupForm.reset()}};const i={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_inactive",inputErrorClass:"modal__form-input_error",errorClass:"modal__error_visible"},n=document.querySelector(".profile__edit-button"),o=document.querySelector("#profile-edit-form"),a=document.querySelector(".profile__title"),l=document.querySelector(".profile__description"),d=document.querySelector("#profile-title-input"),c=document.querySelector("#profile-description-input"),h=document.querySelector("#card-add-modal"),u=document.querySelector(".profile__add-button"),_=document.querySelector("#Profile-image-edit-modal"),m=document.querySelector(".profile__image"),p=document.querySelector(".profile__image-edit"),v=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}updateProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse)}addNewCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}addCardLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeCardLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}deleteUserCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"67d93972-468f-4c7a-bef5-b0ddeb015065","Content-Type":"application/json"}}),f=new t(i,o);f.enableValidation();const E=new t(i,h);E.enableValidation(),new t(i,_).enableValidation();const L=new class{constructor(e){let{userName:t,userJob:s,userAvatar:r}=e;this._userName=t,this._userDescription=s,this._userAvatar=r}getUserInfo(){return{name:this._userName.textContent,about:this._userDescription.textContent}}setUserInfo(e){this._userName.textContent=e.name,this._userDescription.textContent=e.about}setAvatar(e){this._userAvatar.src=e}getAvatar(){return this._userAvatar.src}}({userName:a,userJob:l,userAvatar:m});n.addEventListener("click",(function(){const{name:e,about:t}=L.getUserInfo();d.value=e,c.value=t,b.open(),f.disableButton()}));const b=new r("#profile-edit-modal",(e=>{b.renderLoading(!0),v.updateProfileInfo(e).then((e=>{L.setUserInfo(e),b.close()})).catch((e=>{console.log(e)})).finally((()=>{b.renderLoading(!1,"Save")}))}));b.setEventListeners(),p.addEventListener("click",(()=>g.open()));const g=new r("#Profile-image-edit-modal",(e=>{g.renderLoading(!0),v.updateProfileAvatar(e.avatar).then((e=>{L.setAvatar(e.avatar),g.close()})).catch((e=>{console.log(e)})).finally((()=>{g.renderLoading(!1,"Save")}))}));g.setEventListeners();const k=new class extends s{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector("#modal-card-image"),this._popupCaption=this._popupElement.querySelector("#modal-card-caption")}open(e,t){this._popupCaption.textContent=e,this._popupImage.src=t,this._popupImage.alt=e,super.open()}}("#card-image-modal");k.setEventListeners();const S=new class extends s{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._saveButton=this._popupForm.querySelector(".modal__button")}setSubmitAction(e){this._handleSubmit=e}renderLoading(e){this._saveButton.textContent=e?"Loading...":"Yes"}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))}}("#Delete-confirm-modal");let y,C;function I(t){const s=new e(t,C,"#card-template",((e,t)=>{k.open(e,t)}),(e=>{S.open(),S.setSubmitAction((()=>{S.renderLoading(!0),v.deleteUserCard(e).then((()=>{s.deleteCard(),S.close()})).catch((e=>{console.log(e)})).finally((()=>{S.renderLoading(!1)}))}))}),(e=>{s.isLiked()?v.removeCardLikes(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>{console.log(e)})):v.addCardLikes(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>{console.log(e)}))}));return s.getView()}S.setEventListeners(),v.getAppInfo().then((e=>{let[t,s]=e;C=t._id,L.setUserInfo(t),L.setAvatar(t.avatar),y=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._itemsList=document.querySelector(t)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._itemsList.prepend(e)}}({items:s,renderer:e=>{const t=I(e);y.addItem(t)}},".cards__list"),y.renderItems()})).catch((e=>{console.log(e)}));const B=new r("#card-add-modal",(e=>{B.renderLoading(!0),v.addNewCard(e).then((e=>{const t=I(e);B.close(),y.addItem(t)})).catch((e=>{console.log(e)})).finally((()=>{B.renderLoading(!1,"Create")}))}));u.addEventListener("click",(()=>{E.disableButton(),B.open()})),B.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,